window.SIDEBAR_ITEMS = {"enum":[["CallbackError","An error returned from callbacks."],["ErrorKind","A list enumerating the categories of errors in this crate."],["ErrorType","The possible error types for metric recording. Note: the cases in this enum must be kept in sync with the ones in the platform-specific code (e.g. `ErrorType.kt`) and with the metrics in the registry files."],["HistogramType","Different kinds of histograms."],["Lifetime","The supported metrics’ lifetimes."],["MemoryUnit","Different resolutions supported by the memory related metric types (e.g. MemoryDistributionMetric)."],["TimeUnit","Different resolutions supported by the time related metric types (e.g. DatetimeMetric)."],["UploadResult","The result of an attempted ping upload."],["UploadTaskAction","Communication back whether the uploader loop should continue."]],"fn":[["get_timestamp_ms","Returns a timestamp corresponding to “now” with millisecond precision."],["glean_apply_server_knobs_config","Sets a remote configuration to override metrics’ default enabled/disabled state"],["glean_enable_logging","Initialize the logging system based on the target platform. This ensures that logging is shown when executing the Glean SDK unit tests."],["glean_enable_logging_to_fd","Initialize the logging system to send JSON messages to a file descriptor (Unix) or file handle (Windows)."],["glean_get_upload_task","Get the next upload task"],["glean_handle_client_active","Performs the collection/cleanup operations required by becoming active."],["glean_handle_client_inactive","Performs the collection/cleanup operations required by becoming inactive."],["glean_initialize","Initializes Glean."],["glean_initialize_for_subprocess","Creates and initializes a new Glean object for use in a subprocess."],["glean_persist_ping_lifetime_data","Asks the database to persist ping-lifetime data to disk. Probably expensive to call. Only has effect when Glean is configured with `delay_ping_lifetime_io: true`. If Glean hasn’t been initialized this will dispatch and return Ok(()), otherwise it will block until the persist is done and return its Result."],["glean_process_ping_upload_response","Processes the response from an attempt to upload a ping."],["glean_register_event_listener","EXPERIMENTAL: Register a listener object to recieve notifications of event recordings."],["glean_set_debug_view_tag","Sets a debug view tag."],["glean_set_dirty_flag","TEST-ONLY Method"],["glean_set_experiment_active","Indicate that an experiment is running.  Glean will then add an experiment annotation to the environment which is sent with pings. This infomration is not persisted between runs."],["glean_set_experiment_inactive","Indicate that an experiment is no longer running."],["glean_set_experimentation_id","Set an experimentation identifier dynamically."],["glean_set_log_pings","Sets the log pings debug option."],["glean_set_source_tags","Sets source tags."],["glean_set_test_mode","TEST-ONLY Method"],["glean_set_upload_enabled","Sets whether upload is enabled or not."],["glean_shutdown","Shuts down Glean in an orderly fashion."],["glean_submit_ping_by_name","Collect and submit a ping for eventual upload by name."],["glean_submit_ping_by_name_sync","Collect and submit a ping (by its name) for eventual upload, synchronously."],["glean_test_destroy_glean","TEST-ONLY Method"],["glean_test_get_experiment_data","TEST ONLY FUNCTION. Returns the [`RecordedExperiment`] for the given `experiment_id` or `None` if the id isn’t found."],["glean_test_get_experimentation_id","TEST ONLY FUNCTION. Gets stored experimentation id annotation."],["glean_unregister_event_listener","Unregister an event listener from recieving notifications."],["join_init","TEST ONLY FUNCTION Waits on all the glean.init threads’ join handles."],["shutdown","Shuts down Glean in an orderly fashion."],["test_get_num_recorded_errors","Gets the number of recorded errors for the given metric and error type."]],"mod":[["metrics","The different metric types supported by the Glean SDK to handle data."],["ping","Ping collection, assembly & submission."],["storage","Storage snapshotting."],["traits","API definitions for the different metric types supported by the Glean SDK."],["upload","Manages the pending pings queue and directory."]],"struct":[["BooleanMetric","A boolean metric."],["ClientInfoMetrics","Metrics included in every ping as `client_info`."],["CommonMetricData","The common set of data shared across all different metric types."],["CounterMetric","A counter metric."],["CustomDistributionMetric","A custom distribution metric."],["Datetime","Representation of a date, time and timezone."],["DatetimeMetric","A datetime metric."],["DenominatorMetric","A Denominator metric (a kind of count shared among Rate metrics)."],["Error","A specialized `Error` type for this crate’s operations."],["EventMetric","An event metric."],["Glean","The object holding meta information about a Glean instance."],["InternalConfiguration","Configuration for Glean"],["LabeledMetric","A labeled metric."],["MemoryDistributionMetric","A memory distribution metric."],["NumeratorMetric","Developer-facing API for recording rate metrics with external denominators."],["ObjectMetric","An object metric."],["PingRateLimit","How to specify the rate at which pings may be uploaded before they are throttled."],["PingRequest","Represents a request to upload a ping."],["PingType","Stores information about a ping."],["QuantityMetric","A quantity metric."],["Rate","A rate value as given by its numerator and denominator."],["RateMetric","A rate metric."],["RecordedEvent","Represents the recorded data for a single event."],["RecordedExperiment","Deserialized experiment data."],["StringListMetric","A string list metric."],["StringMetric","A string metric."],["TextMetric","A text metric."],["TimerId","Identifier for a running timer."],["TimespanMetric","A timespan metric."],["TimingDistributionMetric","A timing distribution metric."],["UrlMetric","A URL metric."],["UuidMetric","An UUID metric."]],"trait":[["AllowLabeled","Trait for metrics that can be nested inside a labeled metric."],["GleanEventListener","A callback handler that receives the base identifier of recorded events The identifier is in the format: ."],["OnGleanEvents","A callback object used to trigger actions on the foreign-language side."]],"type":[["LabeledBoolean","A labeled boolean."],["LabeledCounter","A labeled counter."],["LabeledString","A labeled string."],["Result","A specialized `Result` type for this crate’s operations."]]};